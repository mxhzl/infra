- name: Install packages and dependencies.
  ansible.builtin.apt:
    pkg:
      - acl
      - unattended-upgrades
      - update-notifier-common
      - mailutils
      - fail2ban
    state: present
    update_cache: true

- name: Copy unattended-upgrades configuration files in place.
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/etc/apt/apt.conf.d/{{ item }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - 20auto-upgrades
    - 50unattended-upgrades

- name: Ensure maintenance scripts directory exists
  become: true
  ansible.builtin.file:
    path: /opt/scripts
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Copy script that will soft shutdown all services and reboot if a reboot is required
  become: true
  ansible.builtin.template:
    src: reboot_if_required.sh
    dest: /opt/scripts/reboot_if_required.sh
    owner: root
    group: root
    mode: "0755"

- name: Do the update reboot if required
  become: true
  ansible.builtin.cron:
    name: "Run reboot_if_required.sh"
    minute: 0
    hour: 5
    job: "/opt/scripts/reboot_if_required.sh"
    user: root

- name: Reject everything and enable UFW
  become: true
  community.general.ufw:
    state: enabled
    policy: "reject"
  tags:
    - firewall

- name: Allow OpenSSH.
  become: true
  community.general.ufw:
    rule: allow
    name: "OpenSSH"
  tags:
    - firewall

- name: Allow all access to tcp port 80
  become: true
  community.general.ufw:
    rule: allow
    port: "80"
    proto: tcp
  tags:
    - firewall

- name: Allow all access to tcp port 443
  become: true
  community.general.ufw:
    rule: allow
    port: "443"
    proto: tcp
  tags:
    - firewall

- name: Update SSH configuration to be more secure
  ansible.builtin.lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - regexp: "^PasswordAuthentication"
      line: "PasswordAuthentication no"
    - regexp: "^PermitRootLogin"
      line: "PermitRootLogin no"

- name: Ensure fail2ban is running and enabled on boot.
  ansible.builtin.service:
    name: fail2ban
    state: started
    enabled: true
